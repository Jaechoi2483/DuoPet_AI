version: '3.8'

services:
  duopet-ai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: duopet-ai-service
    ports:
      - "8000:8000"
    environment:
      - API_HOST=0.0.0.0
      - API_PORT=8000
      - API_WORKERS=4
      - LOG_LEVEL=INFO
    env_file:
      - .env
    volumes:
      - ./db_models:/app/db_models
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config:ro
    networks:
      - duopet-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  redis:
    image: redis:7-alpine
    container_name: duopet-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - duopet-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  mongodb:
    image: mongo:6
    container_name: duopet-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=duopet_ai
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    networks:
      - duopet-network
    restart: unless-stopped

networks:
  duopet-network:
    driver: bridge

volumes:
  redis-data:
  mongo-data:
  mongo-config: